<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd">

    <!-- holding properties for database connectivity /-->
	<context:property-placeholder location="classpath:jdbc.properties" />
    
    <!-- enabling annotation driven configuration /-->
    <context:annotation-config/>
    
    <!-- Esto permite que se utiliza el @persistenceContext para los entityManager -->
    <bean class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor"/>
 
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
      <property name="driverClassName" value="${jdbc.driverClassName}"/>
      <property name="url" value="${jdbc.url}"/>
      <property name="username"  value="${jdbc.username}"/>
      <property name="password" value="${jdbc.password}"/>
    </bean>
  
    
    <!--bean id="entityManagerFactory"
	class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"
	p:dataSource-ref="dataSource">
	<property name="loadTimeWeaver">
            <bean class="org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver"/>
	</property>                             
	<property name="persistenceUnitName" value="dataBasePpal"></property>
    </bean-->

	<!-- la propiedad loadTimeWeaver se usa cuando la configuración se levanta desde el server. Puede ser que lo utilice también de manera temprana -->
    <bean id="entityManagerFactory"
	class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"
	p:dataSource-ref="dataSource"
	p:jpaVendorAdapter-ref="jpaAdapter">
	<property name="loadTimeWeaver">
            <bean class="org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver"/>
	</property>                             
	<property name="persistenceUnitName" value="dataBasePpal"></property>
    </bean>
	 
	<!-- Se utiliza para la integracion con Hibernate.
	Ademas, esto tiene que estar en el bean entityManagerFactory --> 
    <bean id="jpaAdapter"
	class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"
	p:database="${jpa.database}"
	p:showSql="${jpa.showSql}"/>

	<!-- Creo que esto se utiliza cuando el manejador de transacciones se declara de forma programatica -->
    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager"
	p:entityManagerFactory-ref="entityManagerFactory"/>
	
	<tx:annotation-driven transaction-manager="transactionManager"/>

    <!-- Scans the classpath of this application for @Components to deploy as beans -->

    <context:component-scan base-package="ar.com.tragos" />
    <context:component-scan base-package="ar.com.tragos.bean.usuarios" />
    <context:component-scan base-package="ar.com.tragos.bean.registro" />
    <context:component-scan base-package="ar.com.tragos.bean.trago" />
    <context:component-scan base-package="ar.com.tragos.actions.registro" />
    <context:component-scan base-package="ar.com.tragos.actions.login" />
	
</beans>